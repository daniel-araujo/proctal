<?xml version="1.0" encoding="UTF-8"?>
<document>
	<title>Initialization / Deinitialization</title>

	Most C libraries require you to perform some sort of initialization.
	Proctal makes you have to create a handle that will have state
	associated with it. A handle should not be used in multiple threads but
	you can use different handles in different threads simultaneously.

	A handle can be created with a call to <quote>proctal_open</quote>.

	<code type="c">
proctal_t proctal = proctal_open();
	</code>

	This call may fail. You can check if it failed by calling
	<quote>proctal_error</quote>. The error will not be recoverable so you
	will have to proceed to destroying the handle. How to destroy a handle
	will be explained in a few sentences below.

	With the handle created the first thing you will want to do is to hook
	into a program. This is done by passing the process ID (PID) to
	<quote>proctal_pid_set</quote>.

	Here's how you would choose the program running with PID 12345:

	<code type="c">
proctal_pid_set(proctal, 12345);
	</code>

	Now you're able to call functions that operate on a program.

	When you're done using the handle you must destroy it by passing it to
	<quote>proctal_close</quote>.

	<code type="c">
proctal_close(proctal);
	</code>
</document>
