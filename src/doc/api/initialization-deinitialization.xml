<?xml version="1.0" encoding="UTF-8"?>
<document>
	<title>Initialization / Deinitialization</title>

	Handles are used by the API to keep track of state. The type of a
	handle is <quote>proctal_t</quote>.

	A handle must not be used simultaneously in multiple threads, however,
	it is possible to use multiple handles as long as they are used in
	different threads and are not accessing the same program.

	Handles are created by calling the <quote>proctal_open</quote>
	function. It takes no arguments and returns a new handle.

	<code type="c">
proctal_t proctal = proctal_open();
	</code>

	Check the <quote>Error handling</quote> page to learn how to deal with
	an error. An error at this stage is not recoverable, so you have to
	destroy the handle. How to destroy a handle will be explained in a few
	sentences.

	A new handle has all of its state set to default values. To set which
	program you want to access you need to call
	<quote>proctal_pid_set</quote>. It takes a handle and an id as
	arguments.

	<code type="c">
proctal_pid_set(proctal, 12345);
	</code>

	On Linux, the id must be a PID (Process ID).

	When you're done using the handle you must destroy it by calling the
	<quote>proctal_close</quote> function. It takes a handle as argument.

	<code type="c">
proctal_close(proctal);
	</code>
</document>
