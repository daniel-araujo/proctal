<?xml version="1.0" encoding="UTF-8"?>
<document>
	<title>Executing code</title>

	With the <quote>execute</quote> command you can make a program execute
	your code. You can either provide assembly instructions that will then
	get assembled into bytecode or you can provide the bytecode yourself,
	maybe hand-written or assembled by your favorite assembler.

	If you wanted to execute instructions from an assembly file on a
	program whose PID is 12345, the command would look like this:

	<code type="bash-prompt">
$ proctal execute --pid=12345 &lt; code.asm
	</code>

	The given instructions will be embedded at some place in memory and
	executed in a new stack frame in the context of the main thread. The
	other threads will be paused. Your code is free to modify any registers
	because they will be restored to their original values. Control will
	be given back to the program after the last instruction is executed.

	The instructions cannot rely on where they will be placed in memory.

	The instructions are expected to be separated by new lines. The
	<quote>;</quote> character can be used to start a comment that spans to
	the end of the line.

	The <quote>--architecture</quote> option allows you to set the CPU
	architecture. By default it's the same architecture that the tool was
	compiled in. At the moment the available values are <quote>x86</quote>,
	<quote>x86-64</quote>, <quote>arm</quote> and <quote>aarch64</quote>.

	The <quote>--x86-syntax</quote> option allows you to change the
	syntax for x86 assembly. By default it's set to <quote>intel</quote>.
	You can switch to <quote>att</quote> if you prefer.

	The <quote>--x86-mode</quote> option lets you set whether to work with
	the 16-bit, 32-bit or 64-bit versions of the x86 instruction set.

	You can execute bytecode by passing the <quote>--format</quote> option
	with the value <quote>bytecode</quote>.

	Here's how you would execute bytecode from a binary file:

	<code type="bash-prompt">
$ proctal execute --pid=12345 --format=bytecode &lt; code.bin
	</code>
</document>
